import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.60987345.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"content/7.在应用程序中安装Stimulus.md","filePath":"content/7.在应用程序中安装Stimulus.md"}'),o={name:"content/7.在应用程序中安装Stimulus.md"},p=l(`<p>要在你的应用中安装刺激物，把<code>@hotwired/ Stimulus npm</code>包添加到你的JavaScript包中。或者，在**<a href="https://unpkg.com/@hotwired/stimulus/dist/stimulus.js" target="_blank" rel="noreferrer">stimulus.js</a>** 脚本中导入 <code>&lt;script type=&quot;module&quot;&gt;</code>标签。</p><h2 id="使用stimulus-for-rails" tabindex="-1">使用Stimulus for Rails <a class="header-anchor" href="#使用stimulus-for-rails" aria-label="Permalink to &quot;使用Stimulus for Rails&quot;">​</a></h2><p>如果你把Stimulus for Rails和import map一起使用，集成会自动从app/javascript/controllers加载所有的控制器文件。</p><h3 id="控制器文件名映射到标识符" tabindex="-1">控制器文件名映射到标识符 <a class="header-anchor" href="#控制器文件名映射到标识符" aria-label="Permalink to &quot;控制器文件名映射到标识符&quot;">​</a></h3><p>将控制器文件命名为[identifier]_controller.js，其中identifier对应于HTML中每个控制器的data-controller标识符。</p><p>Rails的Stimulus通常使用下划线分隔文件名中的多个单词。控制器文件名中的每个下划线转换为其标识符中的破折号。</p><p>还可以使用子文件夹命名控制器。命名空间控制器文件路径中的每个正斜杠在其标识符中变成两个破折号。</p><p>如果你愿意，你可以在控制器文件名的任何地方使用破折号而不是下划线。刺激对它们一视同仁。</p><table><thead><tr><th>如果你的控制器文件被命名为…</th><th>它的标识符将是…</th></tr></thead><tbody><tr><td>clipboard_controller.js</td><td>剪贴板.</td></tr><tr><td>date_picker_controller.js</td><td>日期选择.</td></tr><tr><td>users/list_item_controller.js</td><td>用户列表项.</td></tr><tr><td>local-time-controller.js</td><td>本地时间.</td></tr></tbody></table><p>如果你正在使用Webpack作为你的JavaScript打包器，你可以使用@hotwired/ Stimulus - Webpack -helpers包来获得与Stimulus for Rails相同的自动加载行为。首先添加包，然后像这样使用它:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Application } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { definitionsFromContext } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@hotwired/stimulus-webpack-helpers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;"> window.Stimulus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Application.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">context</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> require.</span><span style="color:#B392F0;">context</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./controllers&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">js</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Stimulus.</span><span style="color:#B392F0;">load</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">definitionsFromContext</span><span style="color:#E1E4E8;">(context))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Application } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { definitionsFromContext } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@hotwired/stimulus-webpack-helpers&quot;</span></span>
<span class="line"><span style="color:#24292E;"> window.Stimulus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Application.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">context</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> require.</span><span style="color:#6F42C1;">context</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./controllers&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">js</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Stimulus.</span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">definitionsFromContext</span><span style="color:#24292E;">(context))</span></span></code></pre></div><h3 id="在其他构建系统下使用" tabindex="-1">在其他构建系统下使用 <a class="header-anchor" href="#在其他构建系统下使用" aria-label="Permalink to &quot;在其他构建系统下使用&quot;">​</a></h3><p>Stimulus也适用于其他构建系统，但不支持控制器自动加载。相反，你必须显式地加载和注册控制器文件到你的应用程序实例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> src</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">application.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Application } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> HelloController </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./controllers/hello_controller&quot;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> ClipboardController </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./controllers/clipboard_controller&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  window.Stimulus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Application.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  Stimulus.</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">, HelloController)</span></span>
<span class="line"><span style="color:#E1E4E8;">  Stimulus.</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;clipboard&quot;</span><span style="color:#E1E4E8;">, ClipboardController)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">/</span><span style="color:#24292E;"> src</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">application.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Application } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> HelloController </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./controllers/hello_controller&quot;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ClipboardController </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./controllers/clipboard_controller&quot;</span></span>
<span class="line"><span style="color:#24292E;">  window.Stimulus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Application.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  Stimulus.</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">, HelloController)</span></span>
<span class="line"><span style="color:#24292E;">  Stimulus.</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;clipboard&quot;</span><span style="color:#24292E;">, ClipboardController)</span></span></code></pre></div><p>如果你正在使用像esbuild这样的构建器来使用stimulus-rails，你可以使用stimulus:manifest:update Rake任务和。/bin/rails generate stimulus [controller] generator来自动更新位于app/javascript/controllers/index.js的控制器索引文件。</p><h3 id="在无构建系统下使用" tabindex="-1">在无构建系统下使用 <a class="header-anchor" href="#在无构建系统下使用" aria-label="Permalink to &quot;在无构建系统下使用&quot;">​</a></h3><p>如果你不喜欢使用构建系统，你可以在<code>&lt;script type=&quot;module&quot;&gt;</code>标签中加载Stimulus:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">doctype</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Application, Controller } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://unpkg.com/@hotwired/stimulus/dist/stimulus.js&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;"> window.Stimulus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Application.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;"> Stimulus.</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Controller</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">targets</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [ </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">connect</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data-controller</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data-hello-target</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">…</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">doctype</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Application, Controller } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://unpkg.com/@hotwired/stimulus/dist/stimulus.js&quot;</span></span>
<span class="line"><span style="color:#24292E;"> window.Stimulus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Application.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;"> Stimulus.</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Controller</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#E36209;">targets</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [ </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">connect</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-controller</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-hello-target</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">…</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="覆盖属性默认值" tabindex="-1">覆盖属性默认值 <a class="header-anchor" href="#覆盖属性默认值" aria-label="Permalink to &quot;覆盖属性默认值&quot;">​</a></h2><p>如果在你的项目中，刺激的数据与项目中的另一个库冲突，则可以在创建刺激应用程序时覆盖它们。</p><p>·数据控制器</p><p>·数据动作</p><p>·数据目标</p><p>这些核心的刺激属性可以被覆盖(详见:schema.ts):</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// src/application.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Application, defaultSchema } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">customSchema</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">defaultSchema,</span></span>
<span class="line"><span style="color:#E1E4E8;">actionAttribute: </span><span style="color:#9ECBFF;">&#39;data-stimulus-action&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">window.Stimulus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Application.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">(document.documentElement, customSchema);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// src/application.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Application, defaultSchema } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">customSchema</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">...</span><span style="color:#24292E;">defaultSchema,</span></span>
<span class="line"><span style="color:#24292E;">actionAttribute: </span><span style="color:#032F62;">&#39;data-stimulus-action&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">window.Stimulus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Application.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">(document.documentElement, customSchema);</span></span></code></pre></div><h2 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-label="Permalink to &quot;错误处理&quot;">​</a></h2><p>从Stimulus到应用程序代码的所有调用都被封装在try…catch块。</p><p>如果你的代码抛出一个错误，它将被Stimulus捕获并记录到浏览器控制台，包括额外的细节，如控制器名称和事件或被调用的生命周期函数。如果您使用错误跟踪系统来定义window.onerror时，Stimulus也会将错误传递给它。</p><p>你可以通过定义Application# handleError来覆盖Stimulus处理错误的方式:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// src/application.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Application } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">window.Stimulus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Application.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">Stimulus.</span><span style="color:#B392F0;">handleError</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">detail</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(message, detail)</span></span>
<span class="line"><span style="color:#E1E4E8;">ErrorTrackingSystem.</span><span style="color:#B392F0;">captureException</span><span style="color:#E1E4E8;">(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// src/application.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Application } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@hotwired/stimulus&quot;</span></span>
<span class="line"><span style="color:#24292E;">window.Stimulus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Application.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">Stimulus.</span><span style="color:#6F42C1;">handleError</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">error</span><span style="color:#24292E;">, </span><span style="color:#E36209;">message</span><span style="color:#24292E;">, </span><span style="color:#E36209;">detail</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(message, detail)</span></span>
<span class="line"><span style="color:#24292E;">ErrorTrackingSystem.</span><span style="color:#6F42C1;">captureException</span><span style="color:#24292E;">(error)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h2><p>如果您已将您的刺激程序分配给window。您可以使用Stimulus.debug = true从控制台中打开调试模式。当您在源代码中配置应用程序实例时，也可以设置此标志。</p><h2 id="浏览器支持" tabindex="-1">浏览器支持 <a class="header-anchor" href="#浏览器支持" aria-label="Permalink to &quot;浏览器支持&quot;">​</a></h2><p>Stimulus支持所有常青树（evergreen，不知道怎么翻译），自我更新的桌面和箱外移动浏览器。Stimulus 3+不支持Internet Explorer 11(但你可以使用stimulus2与@stimulus/polyfills)。</p>`,34),t=[p];function e(r,c,E,y,i,u){return a(),n("div",null,t)}const F=s(o,[["render",e]]);export{m as __pageData,F as default};
